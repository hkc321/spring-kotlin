name: CI-CD

on:
  push:
    branches:
      - 'master'
  pull_request:
    branches:
      - 'master'

env:
  VERSION: ${{ github.sha }}

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: touch ./src/main/resources/application-prod.yml
      - run: echo "${{secrets.APPLICATION}}" > ./src/main/resources/application-prod.yml

      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew clean --stacktrace --info build

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Change setting
        run: echo "${{secrets.APPLICATION_PROD}}" > ./src/main/resources/application-prod.yml

      - name: Make jar
        run: ./gradlew bootJar

      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build and push front image to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}:latest
          cache-from: type:gha                         # gha는 github action용 캐시 의미
          cache-to: type=gha,mode=max

      - name: Copy OAS file
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          source: ./build/api-spec/*
          target: ${{ secrets.SWAGGER_PATH }}
          strip_components: 2

  CD:
    needs: CI
    runs-on: ubuntu-latest
    steps:
      - name: multiple command
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.TARGET_PATH }}
            . deploy.sh
            sudo docker image prune -f
            
